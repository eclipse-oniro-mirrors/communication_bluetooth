/*
 * Copyright (C) 2021-2022 Huawei Device Co., Ltd.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

###############################################
# below is the format of define event     #
###############################################
#domain: domain name.  [only one domain name can be defined at the top]
#
#author: the author name who define this event
#date: the date when define the event, format is: YYYY-MM-DD
#logged: source file which refer to this event
#usage: the usage of this event
#//Define event name and event properties.
#@EVENT_NAME: the event definition part begin
#  __BASE: { type: event type, level: event level, tag: tag1, tag2, desc: event description}
#  // __BASE is used for defining the basic info of the event.
#  // "type" optional values are: FAULT, STATISTIC, SECURITY, BEHAVIOR.
#  // "level" optional values areï¼šCRITICAL, MINOR
#  // "tag": set tags which may used by subsriber of this event, multiple tags devided by space
#  // "desc" full description of this event
#  @PARAMETER: {type: parameter type, arrsize: array length(optional), desc: parameter description}
#  // follow the __BASE block, each line defines a parameter of this event.
#  // "type" optional values are: INT8, UINT8, INT16, UINT16, INT32, UINT32, INT64, UINT64, FLOAT, DOUBLE, STRING.
#  // "arrsize" if the parameter is an array, set a non-zero value
#  // "desc" full description of this parameter

domain: BLUETOOTH

BLUETOOTH_BR_STATE:
  __BASE: {type: STATISTIC, level: MINOR, desc: bluetooth br message}
  PID: {type: INT32, desc: application pid}
  UID: {type: INT32, desc: application uid}
  BR_STATE: {type: INT32, desc: br state}

BLUETOOTH_BLE_STATE:
  __BASE: {type: STATISTIC, level: MINOR, desc: bluetooth ble message}
  PID: {type: INT32, desc: application pid}
  UID: {type: INT32, desc: application uid}
  BLE_STATE: {type: INT32, desc: ble state}

BLUETOOTH_SCAN_STATE:
  __BASE: {type: STATISTIC, level: MINOR, desc: bluetooth scan message}
  PID: {type: INT32, desc: application pid}
  UID: {type: INT32, desc: application uid}
  BR_SCAN_STATE: {type: INT32, desc: br scan state}
